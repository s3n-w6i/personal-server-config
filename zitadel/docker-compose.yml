services:
  zitadel:
    restart: always
    networks:
      - db
      - web
    image: ghcr.io/zitadel/zitadel:v2.0.0-v2-alpha.43-amd64
    command: 'start-from-init --masterkey "${ZITADEL_MASTERKEY}" --config /zitadel-config.yaml --tlsMode external'
    environment:
      - ZITADEL_EXTERNALDOMAIN=${ZITADEL_DOMAIN}
      - ZITADEL_WEBAUTHNNAME=${ZITADEL_INSTANCE_NAME}
      - ZITADEL_S3DEFAULTINSTANCE_CUSTOMDOMAIN=${ZITADEL_DOMAIN}
      - ZITADEL_S3DEFAULTINSTANCE_INSTANCENAME=${ZITADEL_INSTANCE_NAME}
      - ZITADEL_S3DEFAULTINSTANCE_ORG_NAME=${ZITADEL_ORG_NAME}
      - ZITADEL_S3DEFAULTINSTANCE_ORG_HUMAN_USERNAME=${ZITADEL_USERNAME}
      - ZITADEL_S3DEFAULTINSTANCE_ORG_HUMAN_PASSWORD=${ZITADEL_PASSWORD}
      - ZITADEL_S3DEFAULTINSTANCE_DEFAULTLANGUAGE=${ZITADEL_LANGUAGE}
      - ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_HOST=${SMTP_HOST}
      - ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_USER=${SMTP_USER}
      - ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_PASSWORD=${SMTP_PASSWORD}
      - ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_TLS=${SMTP_TLS}
      - ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_FROM=${SMTP_FROM}
      - ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_FROMNAME=${SMTP_FROMNAME}
      - ZITADEL_DATABASE_USER_PASSWORD=${DATABASE_PASSWORD}
      - ZITADEL_ADMINUSER_PASSWORD=${ADMIN_PASSWORD}
      - ZITADEL_LOG_LEVEL=debug
    depends_on:
      chown:
        condition: 'service_completed_successfully'
    volumes:
      - ./zitadel-config.yml:/zitadel-config.yaml:ro
      - zitadel-certs:/crdb-certs:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      # Middlewares
      - "traefik.http.middlewares.zitadel.headers.isdevelopment=false"
      - "traefik.http.middlewares.zitadel.headers.allowedhosts=${ZITADEL_DOMAIN}"
      # HTTP/2 Support for Zitadel
      - "traefik.http.services.zitadel-web.loadbalancer.server.scheme=h2c"
      - "traefik.http.services.zitadel-web.loadbalancer.server.port=8080"
      - "traefik.http.services.zitadel-web.loadbalancer.passhostheader=true"
      # HTTP
      - "traefik.http.routers.zitadel-web.rule=HostRegexp(`${ZITADEL_DOMAIN}`, `{subdomain:[a-z]+}.${ZITADEL_DOMAIN}`)"
      - "traefik.http.routers.zitadel-web.entrypoints=web"
      # HTTPS
      - "traefik.http.routers.zitadel-secured.rule=HostRegexp(`${ZITADEL_DOMAIN}`, `{subdomain:[a-z]+}.${ZITADEL_DOMAIN}`)"
      - "traefik.http.routers.zitadel-secured.entrypoints=web-secured"
      - "traefik.http.routers.zitadel-secured.tls.certresolver=tlschallenge"
      - "traefik.http.routers.zitadel-secured.tls.domains[0].main=${ZITADEL_DOMAIN}"
      - "traefik.http.routers.zitadel-secured.middlewares=zitadel"
  
  chown:
    image: cockroachdb/cockroach:v22.1.0
    entrypoint: [ '/bin/bash', '-c' ]
    command: [ 'cp /certs/ca.crt /zitadel-certs/ && cp /certs/client.root.crt /zitadel-certs/ && cp /certs/client.root.key /zitadel-certs/ && chown 1000:1000 /zitadel-certs/* && chmod 0400 /zitadel-certs/*' ]
    volumes:
      - 'certs:/certs:ro'
      - 'zitadel-certs:/zitadel-certs:rw'
    depends_on:
      db:
        condition: 'service_healthy'

  db:
    restart: always
    networks:
      - db
    image: cockroachdb/cockroach:v22.1.0
    command: start-single-node --advertise-addr db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 20s
    volumes:
      - cockroachdata:/cockroach/cockroach-data:rw
      - certs:/cockroach/certs:rw
    # ports:
    #   - 9090:8080
    #   - 26257:26257

volumes:
  cockroachdata:
  zitadel-certs:
  certs:

networks:
  db:
  web:
    external: true
