services:
  traefik:
    restart: always
    image: traefik:v3.3
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # Entrypoints
      - --entryPoints.web.address=:80
      - --entryPoints.web-secured.address=:443
      - --entryPoints.web-secured.http3
      - --entryPoints.web-secured.http3.advertisedport=443
      # Default middlewares
      - --entryPoints.web.http.middlewares=https_redirect
      # Certificate
      # TLS Challenge for most services
      - --certificatesresolvers.tlschallenge.acme.tlschallenge=true
      - --certificatesresolvers.tlschallenge.acme.email=${CERTIFICATE_EMAIL} # <== Setting email for certs
      - --certificatesresolvers.tlschallenge.acme.storage=/letsencrypt/acme.json # <== Defining acme file to store cert informationcertificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      #- --certificatesresolvers.tlschallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      # Logging for fail2ban
      - --accesslog=true
      - --accesslog.filepath=var/log/access.log
      - --accesslog.filters.statuscodes=400-499
      - --accesslog.bufferingsize=30
    ports:
      - "80:80" # http
      - "443:443/tcp" # https
      - "443:443/udp" # http 3
    volumes:
      - ./config/traefik/inject-secrets.bash:/etc/traefik.d/inject-secrets.bash
      - traefik-certs:/letsencrypt
      - /run/user/1000/docker.sock:/var/run/docker.sock:ro
      - /var/log/traefik:/var/log
    networks:
      - web
    secrets:
      - traefik_certificate-email
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      # Homepage
      - homepage.group=Server-Management
      - homepage.name=Traefik
      - homepage.description=Reverse Proxy
      - homepage.icon=si-traefikproxy

  fail2ban:
    restart: always
    image: crazymax/fail2ban:latest
    network_mode: "host"
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /var/log/traefik:/var/log/traefik:ro
      - ./netdata/fail2ban/log:/var/log/fail2ban.log
      - ./netdata/fail2ban/conf:/etc/fail2ban/jail.local
      - ./config/fail2ban/data:/data

  # traefik-forward-auth:
  #   restart: always
  #   image: thomseddon/traefik-forward-auth:2
  #   environment:
  #     - DEFAULT_PROVIDER=oidc
  #     - PROVIDERS_OIDC_ISSUER_URL=${OIDC_ISSUER_URL}
  #     - PROVIDERS_OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
  #     - PROVIDERS_OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
  #     - SECRET=${SECRET}
  #     - AUTH_HOST=${AUTH_DOMAIN}
  #     - COOKIE_DOMAIN=${ROOT_DOMAIN}
  #     #- LOG_LEVEL=debug
  #   logging:
  #     options:
  #       max-size: 10m
  #   networks:
  #     - web
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=web"
  #     - "traefik.http.services.traefik-forward-auth-web.loadbalancer.server.port=4181"
  #     # HTTP
  #     - "traefik.http.routers.traefik-forward-auth-web.rule=Host(`${AUTH_DOMAIN}`) || Host(`www.${AUTH_DOMAIN}`)"
  #     - "traefik.http.routers.traefik-forward-auth-web.entrypoints=web"
  #     # HTTPS
  #     - "traefik.http.routers.traefik-forward-auth-secured.rule=Host(`${AUTH_DOMAIN}`) || Host(`www.${AUTH_DOMAIN}`)"
  #     - "traefik.http.routers.traefik-forward-auth-secured.entrypoints=web-secured"
  #     - "traefik.http.routers.traefik-forward-auth-secured.tls.certresolver=tlschallenge"
  #     # Auth middleware
  #     - "traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181"
  #     - "traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User"

networks:
  web:
    name: web
    driver: bridge
    internal: false

volumes:
  traefik-certs:

secrets:
  traefik_certificate-email:
    file: ../secrets/traefik_certificate-email
